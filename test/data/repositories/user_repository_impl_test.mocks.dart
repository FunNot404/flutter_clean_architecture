// Mocks generated by Mockito 5.0.17 from annotations
// in flutter_clean_architecture/test/data/repositories/user_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:flutter_clean_architecture/core/network/network_info.dart'
    as _i6;
import 'package:flutter_clean_architecture/data/datasources/user_local_data_source.dart'
    as _i5;
import 'package:flutter_clean_architecture/data/datasources/user_remote_data_source.dart'
    as _i2;
import 'package:flutter_clean_architecture/data/models/user_model.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [UserRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRemoteDataSource extends _i1.Mock
    implements _i2.UserRemoteDataSource {
  MockUserRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.UserModel>> getRandomUsers() =>
      (super.noSuchMethod(Invocation.method(#getRandomUsers, []),
              returnValue: Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]))
          as _i3.Future<List<_i4.UserModel>>);
  @override
  _i3.Future<List<_i4.UserModel>> getUsers(int? count) =>
      (super.noSuchMethod(Invocation.method(#getUsers, [count]),
              returnValue: Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]))
          as _i3.Future<List<_i4.UserModel>>);
}

/// A class which mocks [UserLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserLocalDataSource extends _i1.Mock
    implements _i5.UserLocalDataSource {
  MockUserLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> cacheUsers(List<_i4.UserModel>? usersToChache) =>
      (super.noSuchMethod(Invocation.method(#cacheUsers, [usersToChache]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.UserModel>> getLastUsers() =>
      (super.noSuchMethod(Invocation.method(#getLastUsers, []),
              returnValue: Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]))
          as _i3.Future<List<_i4.UserModel>>);
}

/// A class which mocks [NetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfo extends _i1.Mock implements _i6.NetworkInfo {
  MockNetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
